const prototypes = [
  { "name": "split",
    "data-type": "string",
    "description": "The split() method splits a String object into an array of strings by separating the string into substrings, using a specified separator string to determine where to make each split."
  },
  { "name": "concat",
    "data-type": "string",
    "description": "The concat() method concatenates the string arguments to the calling string and returns a new string."
  },
  { "name": "includes",
    "data-type": "string",
    "description": "The includes() method determines whether one string may be found within another string, returning true or false as appropriate."
  },
  { "name": "slice",
    "data-type": "string",
    "description": "The slice() method extracts a section of a string and returns it as a new string, without modifying the original string."
  },
  { "name": "toLowerCase",
    "data-type": "string",
    "description": "The toLowerCase() method returns the calling string value converted to lower case."
  },
  { "name": "toUpperCase",
    "data-type": "string",
    "description": "The toUpperCase() method returns the calling string value converted to uppercase (the value will be converted to a string if it isn't one)."
  },
  { "name": "sort",
    "data-type": "array",
    "description": "The sort() method sorts the elements of an array in place and returns the array. The default sort order is built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values."
  },
  { "name": "concat",
    "data-type": "array",
    "description": "The concat() method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a new array."
  },
  { "name": "filter",
    "data-type": "array",
    "description": "The filter() method creates a new array with all elements that pass the test implemented by the provided function."
  },
  { "name": "find",
    "data-type": "array",
    "description": "The find() method returns the value of the first element in the array that satisfies the provided testing function. Otherwise undefined is returned."
  },
  { "name": "forEach",
    "data-type": "array",
    "description": "The forEach() method executes a provided function once for each array element."
  },
  { "name": "includes",
    "data-type": "array",
    "description": "The includes() method determines whether an array includes a certain value among its entries, returning true or false as appropriate."
  },
  { "name": "join",
    "data-type": "array",
    "description": "The join() method creates and returns a new string by concatenating all of the elements in an array (or an array-like object), separated by commas or a specified separator string."
  },
  { "name": "map",
    "data-type": "array",
    "description": "The map() method creates a new array with the results of calling a provided function on every element in the calling array."
  },
  { "name": "pop",
    "data-type": "array",
    "description": "The pop() method removes the last element from an array and returns that element. This method changes the length of the array."
  },
  { "name": "push",
    "data-type": "array",
    "description": "The push() method adds one or more elements to the end of an array and returns the new length of the array."
  },
  { "name": "reduce",
    "data-type": "array",
    "description": "The reduce() method executes a reducer function (that you provide) on each member of the array resulting in a single output value."
  },
  { "name": "reverse",
    "data-type": "array",
    "description": "The reverse() method reverses an array in place. The first array element becomes the last, and the last array element becomes the first."
  },
  { "name": "shift",
    "data-type": "array",
    "description": "The shift() method removes the first element from an array and returns that removed element. This method changes the length of the array."
  },
  { "name": "unshift",
    "data-type": "array",
    "description": "The unshift() method adds one or more elements to the beginning of an array and returns the new length of the array."
  },
  { "name": "slice",
    "data-type": "array",
    "description": "The slice() method returns a shallow copy of a portion of an array into a new array object selected from begin to end (end not included). The original array will not be modified."
  },
  { "name": "splice",
    "data-type": "array",
    "description": "The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements."
  },
  { "name": "toString",
    "data-type": "array",
    "description": "The toString() method returns a string representing the specified array and its elements."
  }
];
